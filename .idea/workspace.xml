<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="742ebebe-ab91-47be-9371-e7445dc91f1a" name="Changes" comment="Add &quot;sum13&quot; and &quot;countEvens&quot; methods">
      <change beforePath="$PROJECT_DIR$/src/array_2/Array2.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/array_2/Array2.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2KRcLckxKLmtCi2bNG4L2G09cOR" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/Java Projects/codingBat&quot;
  }
}</component>
  <component name="RunManager">
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="Main" />
      <module name="codingBat" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Main" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="742ebebe-ab91-47be-9371-e7445dc91f1a" name="Changes" comment="" />
      <created>1673940784799</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1673940784799</updated>
    </task>
    <task id="LOCAL-00001" summary="Init commit">
      <created>1673949863800</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1673949863800</updated>
    </task>
    <task id="LOCAL-00002" summary="Add &quot;oneTwo&quot; method&#10;&#10;Given a string, compute a new string by moving the first char to come after the next two chars, so &quot;abc&quot; yields &quot;bca&quot;. Repeat this process for each subsequent group of 3 chars, so &quot;abcdef&quot; yields &quot;bcaefd&quot;. Ignore any group of fewer than 3 chars at the end.&#10;&#10;&#10;oneTwo(&quot;abc&quot;) → &quot;bca&quot;&#10;oneTwo(&quot;tca&quot;) → &quot;cat&quot;&#10;oneTwo(&quot;tcagdo&quot;) → &quot;catdog&quot;">
      <created>1673952375500</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1673952375500</updated>
    </task>
    <task id="LOCAL-00003" summary="Add &quot;plusOut&quot; method&#10;&#10;&#10;&#10;Given a string and a non-empty word string, return a version of the original String where all chars have been replaced by pluses (&quot;+&quot;), except for appearances of the word string which are preserved unchanged.&#10;&#10;&#10;plusOut(&quot;12xy34&quot;, &quot;xy&quot;) → &quot;++xy++&quot;&#10;plusOut(&quot;12xy34&quot;, &quot;1&quot;) → &quot;1+++++&quot;&#10;plusOut(&quot;12xy34xyabcxy&quot;, &quot;xy&quot;) → &quot;++xy++xy+++xy&quot;">
      <created>1674044769438</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1674044769438</updated>
    </task>
    <task id="LOCAL-00004" summary="Add &quot;catDog&quot; method&#10;&#10;Return true if the string &quot;cat&quot; and &quot;dog&quot; appear the same number of times in the given string.&#10;&#10;&#10;catDog(&quot;catdog&quot;) → true&#10;catDog(&quot;catcat&quot;) → false&#10;catDog(&quot;1cat1cadodog&quot;) → true">
      <created>1674045278284</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1674045278284</updated>
    </task>
    <task id="LOCAL-00005" summary="Add &quot;xyzThere&quot; method&#10;&#10;Return true if the given string contains an appearance of &quot;xyz&quot; where the xyz is not directly preceeded by a period (.). So &quot;xxyz&quot; counts but &quot;x.xyz&quot; does not.&#10;&#10;xyzThere(&quot;abcxyz&quot;) → true&#10;xyzThere(&quot;abc.xyz&quot;) → false&#10;xyzThere(&quot;xyz.abc&quot;) → true">
      <created>1674113836629</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1674113836629</updated>
    </task>
    <task id="LOCAL-00006" summary="Add &quot;mixString&quot; method&#10;&#10;Given two strings, a and b, create a bigger string made of the first char of a, the first char of b, the second char of a, the second char of b, and so on. Any leftover chars go at the end of the result.&#10;&#10;mixString(&quot;abc&quot;, &quot;xyz&quot;) → &quot;axbycz&quot;&#10;mixString(&quot;Hi&quot;, &quot;There&quot;) → &quot;HTihere&quot;&#10;mixString(&quot;xxxx&quot;, &quot;There&quot;) → &quot;xTxhxexre&quot;">
      <created>1674119060590</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1674119060590</updated>
    </task>
    <task id="LOCAL-00007" summary="Add &quot;repeatSeparator&quot; method&#10;&#10;Given two strings, word and a separator sep, return a big string made of count occurrences of the word, separated by the separator string.&#10;&#10;repeatSeparator(&quot;Word&quot;, &quot;X&quot;, 3) → &quot;WordXWordXWord&quot;&#10;repeatSeparator(&quot;This&quot;, &quot;And&quot;, 2) → &quot;ThisAndThis&quot;&#10;repeatSeparator(&quot;This&quot;, &quot;And&quot;, 1) → &quot;This&quot;">
      <created>1674120410813</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1674120410813</updated>
    </task>
    <task id="LOCAL-00008" summary="Add &quot;sum13&quot; and &quot;countEvens&quot; methods">
      <created>1674224453844</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1674224453844</updated>
    </task>
    <option name="localTasksCounter" value="9" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Init commit" />
    <MESSAGE value="Add &quot;oneTwo&quot; method&#10;&#10;Given a string, compute a new string by moving the first char to come after the next two chars, so &quot;abc&quot; yields &quot;bca&quot;. Repeat this process for each subsequent group of 3 chars, so &quot;abcdef&quot; yields &quot;bcaefd&quot;. Ignore any group of fewer than 3 chars at the end.&#10;&#10;&#10;oneTwo(&quot;abc&quot;) → &quot;bca&quot;&#10;oneTwo(&quot;tca&quot;) → &quot;cat&quot;&#10;oneTwo(&quot;tcagdo&quot;) → &quot;catdog&quot;" />
    <MESSAGE value="Add &quot;plusOut&quot; method&#10;&#10;&#10;&#10;Given a string and a non-empty word string, return a version of the original String where all chars have been replaced by pluses (&quot;+&quot;), except for appearances of the word string which are preserved unchanged.&#10;&#10;&#10;plusOut(&quot;12xy34&quot;, &quot;xy&quot;) → &quot;++xy++&quot;&#10;plusOut(&quot;12xy34&quot;, &quot;1&quot;) → &quot;1+++++&quot;&#10;plusOut(&quot;12xy34xyabcxy&quot;, &quot;xy&quot;) → &quot;++xy++xy+++xy&quot;" />
    <MESSAGE value="Add &quot;catDog&quot; method&#10;&#10;Return true if the string &quot;cat&quot; and &quot;dog&quot; appear the same number of times in the given string.&#10;&#10;&#10;catDog(&quot;catdog&quot;) → true&#10;catDog(&quot;catcat&quot;) → false&#10;catDog(&quot;1cat1cadodog&quot;) → true" />
    <MESSAGE value="Add &quot;xyzThere&quot; method&#10;&#10;Return true if the given string contains an appearance of &quot;xyz&quot; where the xyz is not directly preceeded by a period (.). So &quot;xxyz&quot; counts but &quot;x.xyz&quot; does not.&#10;&#10;xyzThere(&quot;abcxyz&quot;) → true&#10;xyzThere(&quot;abc.xyz&quot;) → false&#10;xyzThere(&quot;xyz.abc&quot;) → true" />
    <MESSAGE value="Add &quot;mixString&quot; method&#10;&#10;Given two strings, a and b, create a bigger string made of the first char of a, the first char of b, the second char of a, the second char of b, and so on. Any leftover chars go at the end of the result.&#10;&#10;mixString(&quot;abc&quot;, &quot;xyz&quot;) → &quot;axbycz&quot;&#10;mixString(&quot;Hi&quot;, &quot;There&quot;) → &quot;HTihere&quot;&#10;mixString(&quot;xxxx&quot;, &quot;There&quot;) → &quot;xTxhxexre&quot;" />
    <MESSAGE value="Add &quot;repeatSeparator&quot; method&#10;&#10;Given two strings, word and a separator sep, return a big string made of count occurrences of the word, separated by the separator string.&#10;&#10;repeatSeparator(&quot;Word&quot;, &quot;X&quot;, 3) → &quot;WordXWordXWord&quot;&#10;repeatSeparator(&quot;This&quot;, &quot;And&quot;, 2) → &quot;ThisAndThis&quot;&#10;repeatSeparator(&quot;This&quot;, &quot;And&quot;, 1) → &quot;This&quot;" />
    <MESSAGE value="Add &quot;sum13&quot; and &quot;countEvens&quot; methods" />
    <option name="LAST_COMMIT_MESSAGE" value="Add &quot;sum13&quot; and &quot;countEvens&quot; methods" />
  </component>
</project>